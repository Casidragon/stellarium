-------------------- STELLARIUM INSTALLATION INSTRUCTIONS ---------------------

===============================================================================
                           BINARY INSTALLATION
===============================================================================
Most of the end users will prefere using precompiled binary packages:

- WINDOWS USERS :
run setup.exe and follow the instructions.

- MACOSX USERS :
run stellarium.dmg

- LINUX USERS :
Look for the binary package matching your distribution.


===============================================================================
        COMPILATION from the source package (stellarium-XXX.tgz)
===============================================================================
If you can't find a suited binary package or if you are curious you can also 
compile the software by yourself.

Compilation and installation have been successfuly tested on many plateforms 
and OS (including windows). These are general explanations for any architec-
tures. Special (tricky) cases are described below.

To compile stellarium, you will need the following development libraries :
- openGL (libgl-dev on linux, libopengl32 on win32)
- GLU (libglu-dev on linux libglu32 on win32)
- SDL - www.libsdl.org (libsdl-dev).
- Zlib - www.zlib.net (zlib-dev).
- PNG - www.libpng.org (libpng-dev).
- SDL-mixer : this is optional, only if you want to enable sound which is any-
way unused on standard version (libsdl-mixer-dev)

Once this is installed you are ready to compile stellarium sources :
untar the tar.gz archive
~$ tar -xzf stellarium-XXX.tar.gz
~$ cd stellarium

then type
~$ ./configure
~$ make

then to launch the local version of the program type
~$ ./src/stellarium

to fully install stellarium (so that it will be launchable from everywhere) type as root
~$ make install

once installed you may want to clean the build directory
~$ make clean

If you want to uninstall stellarium, type as root
~$ make uninstall

===============================================================================
Special instructions for COMPILATION on MACOSX with Xcode (By Da-Woon Jung)
===============================================================================
untar the tar.gz archive
~$ tar -xzf stellarium-XXX.tar.gz
~$ cd stellarium

untar the file macosx-xcode.tar.gz
~$ tar -xzf macosx-xcode.tar.gz

this should create the "macosx" directory
Follow instructions in the macosx/Readme.rtf file.

===============================================================================
Special instructions for COMPILATION on WINDOWS (XP) with MinGW
===============================================================================


===============================================================================
              COMPILATION (and modification) from the CVS sources
===============================================================================
You can get the latest cvs snapshot (from sourceforge). However with this CVS
version no correct behaviour is garanteed. It is mainly intended for use by
developers. 
You can browse the CVS tree from http://cvs.sourceforge.net/viewcvs.py/stellarium/

To get the latest cvs snapshot type in a console:

~$ cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/stellarium login
~$ cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/stellarium co stellarium

then to compile type:
~$ cd stellarium
~$ ./autogen.sh
~$ make

then to launch the local version of the program type
~$ ./src/stellarium

You can now have a look at the src/ directory where you will find the source files.
Edit whatever you want in it and when your new great feature is done you will need 
to share it with the community of stellarium developers.

At this point, an official developer just have to type cvs commit to update the 
repository version. But as you are not an official developer (yet!) you will need 
to create a patch file which will contain all the changes you did on the source code.

~$ cd directory-you-want-to-diff
~$ cvs -z3 diff -u > mypatch.diff

You can now submit mypatch.diff on the sourceforge stellarium page in the patches 
section (http://sourceforge.net/tracker/?group_id=48857&atid=454375) with a clear 
comment on what is the patch doing.

A project member will then have a look at it and decide whether the patch is 
accepted or rejected for integration into stellarium.
