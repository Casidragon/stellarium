/*
 * Stellarium
 * Copyright (C) 2008 Matthew Gates
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*!

@mainpage Stellarium API Documentation

@section intro_sec Introduction

This documentation concerns the inner workings of Stellarium.  This documentation 
is targetted at developers of scripts, plugins and the core program.

@section intro_scripts Scripting API

Stellarium uses the <a href="http://doc.trolltech.com/4.3/qtscript.html">QT 
Scripting Engine</a>.  The basic scripting language is 
<a href="http://en.wikipedia.org/wiki/ECMAScript">ECMAScript</a>, which is related to Javascript.

Authors of Stellarium scripts may use application specific functions from the following places:

- The public slots in the class StelMainScriptAPI.  These are available in the scripting engine via the
  object named "core".  For example, to access StelMainScriptAPI::wait() from a script, the author would
  use the scripting command: core.wait(...);

- The public slots for each StelModule are available in the scripting engine via an object with the 
  same name as the corresponding StelModule.  For example, to access LandscapeMgr::setFlagAtmosphere(), 
  a script author would use the scripting command: LandscapeMgr.setFlagAtmosphere(...);


*/
